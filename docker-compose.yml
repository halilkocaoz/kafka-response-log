version: '3.3'

services:
  kartaca-zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: kartaca-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  db:
    image: postgres
    container_name: kartaca-postgres
    ports: 
      - "15432:5432"
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: psqlpass
  
  kartaca-kafka:
    image: confluentinc/cp-kafka
    container_name: kartaca-kafka
    depends_on:
      - kartaca-zookeeper
    ports:
      - "19092:19092"
    healthcheck:
      test: "/usr/bin/kafka-topics --list --zookeeper kartaca-zookeeper:2181"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kartaca-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kartaca-kafka:9092, CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  kafka-topics:
    image: confluentinc/cp-kafka
    container_name: kafka-topics
    command: "bash -c 'echo creating topics && \ kafka-topics --bootstrap-server kartaca-kafka:9092 --create --topic response_log'"

  web-net:
    build: "."
    container_name: net-webapi
    ports:
      - "1923:80"
  
  consumer-go:
    build: ./consumer
    container_name: consumer-go